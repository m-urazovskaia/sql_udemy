CREATE TABLE book
(
	book_id int NOT NULL,
	title text NOT NULL,
	isbn varchar(32) NOT NULL,
	publisher_id int NOT NULL,

	CONSTRAINT PK_book_book_id PRIMARY KEY(book_id)
);

SELECT * FROM book;

# Так как колонка 'book_id' вида int, а не serial, мы можем задать автоматический id:
CREATE SEQUENCE IF NOT EXISTS book_book_id_seq
START WITH 1 OWNED BY book.book_id;

# След запись выдаст ошибку, так как по умолчанию колонка 'book_id' заполняется с null
INSERT INTO book(title, isbn, publisher_id)
VALUES('title', 'isbn', 1)

# Чтобы не было ошибки, используем 'default'
ALTER TABLE book
ALTER COLUMN book_id SET DEFAULT nextval('book_book_id_seq')


# ЧТОБЫ ИЗБЕЖАТЬ ПРОБЛЕМ С АВТОГЕНЕРАЦИЕЙ ID (например, при вставке некоторых значений вручную выскочит ошибка уникальности) используем 'GENERATED ALWAYS AS IDENTITY':
CREATE TABLE book
(
	book_id int GENERATED ALWAYS AS IDENTITY NOT NULL,
	title text NOT NULL,
	isbn varchar(32) NOT NULL,
	publisher_id int NOT NULL,

	CONSTRAINT PK_book_book_id PRIMARY KEY(book_id)
);

INSERT INTO book
VALUES ('title2', 'isbn2', 1) -- работает, id зап-т авт-ки
VALUES (3, 'title2', 'isbn2', 1) -- ошибка


# Обойти это ограничение можно с помощью 'OVERRIDING SYSTEM VALUE':
INSERT INTO book
OVERRIDING SYSTEM VALUE
VALUES (3, 'title2', 'isbn2', 1)

# type 'serial' в этом случае не ограничивает явной вставки данных, ошибки видно не будет. Использование вместо 'ALWAYS' 'BY DEFAULT' будет почти идентично serial, то есть даст возможность менять вручную автоматическую генерацию.

 CREATE TABLE book
(
	book_id int GENERATED ALWAYS AS IDENTITY (START WITH 10 INCREMENT BY 2) NOT NULL,
	title text NOT NULL,
	isbn varchar(32) NOT NULL,
	publisher_id int NOT NULL,

	CONSTRAINT PK_book_book_id PRIMARY KEY(book_id)
);