-- 1. Переписать функцию, которую мы разработали ранее в одном из ДЗ таким образом,
-- чтобы функция возвращала экземпляр композитного типа. Вот та самая функция:
create or replace function get_salary_boundaries_by_city(
	emp_city varchar, out min_salary numeric, out max_salary numeric) 
AS 
$$
	SELECT MIN(salary) AS min_salary,
	   	   MAX(salary) AS max_salary
  	FROM employees
	WHERE city = emp_city
$$ language sql;

CREATE TYPE salary_boundaries AS (
	min_salary numeric,
	max_salary numeric
);

CREATE FUNCTION get_salary_boundaries_by_city(emp_city varchar) RETURNS SETOF salary_boundaries AS $$
	SELECT MIN(salary), MAX(salary) 
	FROM employees
	WHERE city = emp_city
$$ LANGUAGE sql;

SELECT * FROM get_salary_boundaries_by_city('London');

-- 2. Задание состоит из пунктов:
-- Создать перечисление армейских званий США, включающее следующие значения: Private, Corporal, Sergeant
-- Вывести все значения из перечисления.
-- Добавить значение Major после Sergeant в перечисление
-- Создать таблицу личного состава с колонками: person_id, first_name, last_name, person_rank
-- (типа перечисления)
-- Добавить несколько записей, вывести все записи из таблицы

CREATE TYPE usa_army_ranks AS ENUM(
'Private', 'Corporal', 'Sergeant');

SELECT enum_range(null::usa_army_ranks); 

ALTER TYPE usa_army_ranks
ADD VALUE 'Major' AFTER 'Sergeant';

CREATE TABLE personnel (
	person_id serial PRIMARY KEY,
	first_name text,
	last_name text,
	person_rank usa_army_ranks
);

INSERT INTO personnel (first_name, last_name, person_rank)
VALUES
('Jeck', 'Vebber', 'Corporal'),
('Bob', 'Kelly', 'Major');

SELECT * FROM personnel;
