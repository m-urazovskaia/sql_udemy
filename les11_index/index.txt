Индекс - структура данных, ускоряющая выборку данных из таблицы за счет доп. операций записи и пространства на диске, исп-мых для хранения и поддержания структуры данных в актуальном состоянии.

SELECT amname FROM pg_am; - позволяет увидеть доступные типы индексов на сервере

	B-tree (сбалансированное дерево)
	Хеш-индекс
Специализированные индексы:
	GiST (обобщенное дерево поиска)
	GIN (обобщенный обратный)
	SP-GiST (GiST с двоичным разбиением пространства)
	BRIN (блочно-диапазонный)

Методы сканирования
	Индексное (index scan)
	Исключительно индексное сканирование (index only scan)
	Сканирование по битовой карте (bitman scan)
	Последовательное сканирвоание (sequential scan)


Balanced tree
	создается по умолчанию (CREATE INDEX index_name ON table_name(										column_name))
	поддерживает операторы <, >, <=, >=, =
	поддерживает LIKE 'abc%'(но не '%abc')
	индексирует NULL
	сложность поиска O(logN)

Hash
	CREATE INDEX index_name ON table_name USING HASH(column_name);
	поддерживает только оператор '='
	не отражается в журнале предзаписи(WAL)
	Не рекомендуется к применению (в общем и целом)
	Сложность поиска О(1)

GiST
	обычно применяется для индексации геометрических типов данных
	и текстовых для организации полнотекстового поиска
	занимает меньше места, чем GIN, но может быть менее эффективен

GIN
	обычно применяется для индексации массива или набора значений
	типы, например, как массив, range_типы(диапазоны), джейсонПи, пара ключ-значений...
	можно использовать для организации полнотекстового поиска с более сложными запросами, чем, например, 'abc%'

SP-GiST
	используется для наборов данных, которые предполагают естественную упорядоченность, но не являются сбалансированными(н-р, номера телефонов, кластеризующиеся по странам, городам и тд, а часть номера более менее случайна)

BRIN
	потенциально полезен на огромных наборах данных, которые предполагают естественную упорядоченность, н-р, почтовые индексы или тайм-штампы и тд