Что если часть данных обновилась, а часть нет?
Транзакция - логическая группа операций. Может быть выполнена только целиком

ACID
	Atomicity (атомарная операция — операция, которая либо выполняется целиком, либо не выполняется вовсе. Если тран-ию не удается завершить, вводится roll back, все предыдущие операции будут отменены) 
	Consistency (согласованность данных гарантирует, что система не сможет провести несогласованные операции, нарушить ограничения. НО логика должна быть корректна) 
	Isolation (изолированность. При этом параллельные транз-ции не могуч прочитать или изменить несогласованные данные (между операциями)) 
	Durability (долговечность. При успешном выполнении транзакции гарантируется, что никакие сбои не вызовут отката действий)

TCL - Transaction Control Language

START TRANSACTION / BEGIN [TRANSACTION]
END [TRANSACTION] / COMMIT
BEGIN / COMMIT - SQL standart
START TRANSACTION / END [TRANSACTION] - pgSQL extension

Пример:
BEGIN;
statement1;
statement2;
statement3;
COMMIT;

Все операции обёрнуты в транзакции в любом случае
При необходимости транзакцию можно откатить, запустив ROLLBACK

Внутри транзакции можно делать "засечки"  в важных местах с помощью команды savepoint:
SAVEPOINT savepoint_name
Откат к точке ROLLBACK TO savepoint_name

В Postgres нельзя создавать транзакции в функциях (хотя функции неявно исполняются в рамках транзакции).
Чтобы прервать транзакцию изнутри функции - RAISE EXCEPTION

Можно откатить только часть - "имитировать" savepoint с помощью BEGIN и EXCEPTION WHEN
